// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Post Form Component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form>
        <div
          className="form-group"
        >
          <TextAreaFieldGroup
            className="post-text"
            name="text"
            onChange={[Function]}
            placeholder="Create a post"
            value=""
          />
        </div>
        <button
          className="post-submit"
          type="submit"
        >
          Submit
        </button>
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="form-group"
          >
            <TextAreaFieldGroup
              className="post-text"
              name="text"
              onChange={[Function]}
              placeholder="Create a post"
              value=""
            />
          </div>,
          <button
            className="post-submit"
            type="submit"
          >
            Submit
          </button>,
        ],
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <TextAreaFieldGroup
              className="post-text"
              name="text"
              onChange={[Function]}
              placeholder="Create a post"
              value=""
            />,
            "className": "form-group",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "post-text",
              "error": undefined,
              "name": "text",
              "onChange": [Function],
              "placeholder": "Create a post",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit",
            "className": "post-submit",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Submit",
          "type": "button",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form>
          <div
            className="form-group"
          >
            <TextAreaFieldGroup
              className="post-text"
              name="text"
              onChange={[Function]}
              placeholder="Create a post"
              value=""
            />
          </div>
          <button
            className="post-submit"
            type="submit"
          >
            Submit
          </button>
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="form-group"
            >
              <TextAreaFieldGroup
                className="post-text"
                name="text"
                onChange={[Function]}
                placeholder="Create a post"
                value=""
              />
            </div>,
            <button
              className="post-submit"
              type="submit"
            >
              Submit
            </button>,
          ],
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextAreaFieldGroup
                className="post-text"
                name="text"
                onChange={[Function]}
                placeholder="Create a post"
                value=""
              />,
              "className": "form-group",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "post-text",
                "error": undefined,
                "name": "text",
                "onChange": [Function],
                "placeholder": "Create a post",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "post-submit",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
