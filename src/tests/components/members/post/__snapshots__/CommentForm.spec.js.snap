// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comment Form Component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card card-info"
      >
        <div
          className="card-header bg-info text-white"
        >
          Make a comment...
        </div>
        <div
          className="card-body"
        >
          <form
            onSubmit={[Function]}
          >
            <div
              className="form-group"
            >
              <TextAreaFieldGroup
                name="text"
                onChange={[Function]}
                placeholder="Reply to post"
                value=""
              />
            </div>
            <button
              className="button-small button-warning"
              type="submit"
            >
              Submit
            </button>
          </form>
        </div>
      </div>,
      "className": "post-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="card-header bg-info text-white"
          >
            Make a comment...
          </div>,
          <div
            className="card-body"
          >
            <form
              onSubmit={[Function]}
            >
              <div
                className="form-group"
              >
                <TextAreaFieldGroup
                  name="text"
                  onChange={[Function]}
                  placeholder="Reply to post"
                  value=""
                />
              </div>
              <button
                className="button-small button-warning"
                type="submit"
              >
                Submit
              </button>
            </form>
          </div>,
        ],
        "className": "card card-info",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Make a comment...",
            "className": "card-header bg-info text-white",
          },
          "ref": null,
          "rendered": "Make a comment...",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <div
                className="form-group"
              >
                <TextAreaFieldGroup
                  name="text"
                  onChange={[Function]}
                  placeholder="Reply to post"
                  value=""
                />
              </div>
              <button
                className="button-small button-warning"
                type="submit"
              >
                Submit
              </button>
            </form>,
            "className": "card-body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="form-group"
                >
                  <TextAreaFieldGroup
                    name="text"
                    onChange={[Function]}
                    placeholder="Reply to post"
                    value=""
                  />
                </div>,
                <button
                  className="button-small button-warning"
                  type="submit"
                >
                  Submit
                </button>,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <TextAreaFieldGroup
                    name="text"
                    onChange={[Function]}
                    placeholder="Reply to post"
                    value=""
                  />,
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "error": undefined,
                    "name": "text",
                    "onChange": [Function],
                    "placeholder": "Reply to post",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit",
                  "className": "button-small button-warning",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": "button",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card card-info"
        >
          <div
            className="card-header bg-info text-white"
          >
            Make a comment...
          </div>
          <div
            className="card-body"
          >
            <form
              onSubmit={[Function]}
            >
              <div
                className="form-group"
              >
                <TextAreaFieldGroup
                  name="text"
                  onChange={[Function]}
                  placeholder="Reply to post"
                  value=""
                />
              </div>
              <button
                className="button-small button-warning"
                type="submit"
              >
                Submit
              </button>
            </form>
          </div>
        </div>,
        "className": "post-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="card-header bg-info text-white"
            >
              Make a comment...
            </div>,
            <div
              className="card-body"
            >
              <form
                onSubmit={[Function]}
              >
                <div
                  className="form-group"
                >
                  <TextAreaFieldGroup
                    name="text"
                    onChange={[Function]}
                    placeholder="Reply to post"
                    value=""
                  />
                </div>
                <button
                  className="button-small button-warning"
                  type="submit"
                >
                  Submit
                </button>
              </form>
            </div>,
          ],
          "className": "card card-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Make a comment...",
              "className": "card-header bg-info text-white",
            },
            "ref": null,
            "rendered": "Make a comment...",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                onSubmit={[Function]}
              >
                <div
                  className="form-group"
                >
                  <TextAreaFieldGroup
                    name="text"
                    onChange={[Function]}
                    placeholder="Reply to post"
                    value=""
                  />
                </div>
                <button
                  className="button-small button-warning"
                  type="submit"
                >
                  Submit
                </button>
              </form>,
              "className": "card-body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="form-group"
                  >
                    <TextAreaFieldGroup
                      name="text"
                      onChange={[Function]}
                      placeholder="Reply to post"
                      value=""
                    />
                  </div>,
                  <button
                    className="button-small button-warning"
                    type="submit"
                  >
                    Submit
                  </button>,
                ],
                "onSubmit": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <TextAreaFieldGroup
                      name="text"
                      onChange={[Function]}
                      placeholder="Reply to post"
                      value=""
                    />,
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "error": undefined,
                      "name": "text",
                      "onChange": [Function],
                      "placeholder": "Reply to post",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Submit",
                    "className": "button-small button-warning",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Submit",
                  "type": "button",
                },
              ],
              "type": "form",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
