// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Member Photos should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MemberPhoto
    getMemberUploads={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    uploads={
      Array [
        Object {
          "description": "Kendo Photo Details",
          "filename": "image-1543168184113.png",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="image-title"
        >
          Member Photograph Upload
        </h1>,
        <div
          className="image-header"
        >
          <form
            onSubmit={[Function]}
          >
            <input
              id="file"
              name="image"
              onChange={[Function]}
              type="file"
            />
            <label
              htmlFor="file"
            >
              Choose File
            </label>
            <input
              className="btn"
              type="submit"
              value="Submit"
            />
            <label
              htmlFor="description"
            >
              Add Photo Description
            </label>
            <input
              name="description"
              onChange={[Function]}
              type="text"
            />
          </form>
        </div>,
        <div
          className="image-container"
        >
          <Spinner />
        </div>,
      ],
      "className": "images-uploads content-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Member Photograph Upload",
          "className": "image-title",
        },
        "ref": null,
        "rendered": "Member Photograph Upload",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <input
              id="file"
              name="image"
              onChange={[Function]}
              type="file"
            />
            <label
              htmlFor="file"
            >
              Choose File
            </label>
            <input
              className="btn"
              type="submit"
              value="Submit"
            />
            <label
              htmlFor="description"
            >
              Add Photo Description
            </label>
            <input
              name="description"
              onChange={[Function]}
              type="text"
            />
          </form>,
          "className": "image-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                id="file"
                name="image"
                onChange={[Function]}
                type="file"
              />,
              <label
                htmlFor="file"
              >
                Choose File
              </label>,
              <input
                className="btn"
                type="submit"
                value="Submit"
              />,
              <label
                htmlFor="description"
              >
                Add Photo Description
              </label>,
              <input
                name="description"
                onChange={[Function]}
                type="text"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "file",
                "name": "image",
                "onChange": [Function],
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choose File",
                "htmlFor": "file",
              },
              "ref": null,
              "rendered": "Choose File",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "btn",
                "type": "submit",
                "value": "Submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Photo Description",
                "htmlFor": "description",
              },
              "ref": null,
              "rendered": "Add Photo Description",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "description",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Spinner />,
          "className": "image-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="image-title"
          >
            Member Photograph Upload
          </h1>,
          <div
            className="image-header"
          >
            <form
              onSubmit={[Function]}
            >
              <input
                id="file"
                name="image"
                onChange={[Function]}
                type="file"
              />
              <label
                htmlFor="file"
              >
                Choose File
              </label>
              <input
                className="btn"
                type="submit"
                value="Submit"
              />
              <label
                htmlFor="description"
              >
                Add Photo Description
              </label>
              <input
                name="description"
                onChange={[Function]}
                type="text"
              />
            </form>
          </div>,
          <div
            className="image-container"
          >
            <Spinner />
          </div>,
        ],
        "className": "images-uploads content-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Member Photograph Upload",
            "className": "image-title",
          },
          "ref": null,
          "rendered": "Member Photograph Upload",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <input
                id="file"
                name="image"
                onChange={[Function]}
                type="file"
              />
              <label
                htmlFor="file"
              >
                Choose File
              </label>
              <input
                className="btn"
                type="submit"
                value="Submit"
              />
              <label
                htmlFor="description"
              >
                Add Photo Description
              </label>
              <input
                name="description"
                onChange={[Function]}
                type="text"
              />
            </form>,
            "className": "image-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="file"
                  name="image"
                  onChange={[Function]}
                  type="file"
                />,
                <label
                  htmlFor="file"
                >
                  Choose File
                </label>,
                <input
                  className="btn"
                  type="submit"
                  value="Submit"
                />,
                <label
                  htmlFor="description"
                >
                  Add Photo Description
                </label>,
                <input
                  name="description"
                  onChange={[Function]}
                  type="text"
                />,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "file",
                  "name": "image",
                  "onChange": [Function],
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Choose File",
                  "htmlFor": "file",
                },
                "ref": null,
                "rendered": "Choose File",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "btn",
                  "type": "submit",
                  "value": "Submit",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Photo Description",
                  "htmlFor": "description",
                },
                "ref": null,
                "rendered": "Add Photo Description",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "description",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Spinner />,
            "className": "image-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
