// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Member Photos should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MemberPhoto
    getMemberUploads={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onUploadDelete={[MockFunction]}
    uploads={
      Object {
        "loading": false,
        "uploads": Array [
          Object {
            "_id": "5bfed7528032901512c0f933",
            "date": "2018-11-28T17:58:42.652Z",
            "description": "Kendo Photo Details",
            "filename": "image-1543168184113.png",
          },
          Object {
            "_id": "5bfed7528036661512c0f933",
            "date": "2018-11-21T17:58:42.652Z",
            "description": "More Details",
            "filename": "image-0000000000.png",
          },
          Object {
            "_id": "5bfed7528032901512c05rtd",
            "date": "2018-11-11T17:58:42.652Z",
            "description": "Extra Details",
            "filename": "image-3333333333.png",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="image-title"
        >
          Member Photograph Upload
        </h1>,
        <form
          className="image-header"
          onSubmit={[Function]}
        >
          <div>
            <label
              className="upload-file button-small"
              htmlFor="upload-file"
            >
              Get Photo
            </label>
            <input
              accept=".jpg,.jpeg,.png"
              id="upload-file"
              name="image"
              onChange={[Function]}
              type="file"
            />
          </div>
          <div>
            <label
              className="upload-label"
              htmlFor="submit"
            >
              Upload Photo
            </label>
            <input
              className="button-small"
              name="submit"
              type="submit"
              value="Submit"
            />
          </div>
          <div>
            <label
              className="upload-label"
              htmlFor="description"
            >
              Add Photo Description
            </label>
            <textarea
              className="upload-text input-box"
              col="2"
              name="description"
              onChange={[Function]}
              rows="2"
              type="text"
            />
          </div>
        </form>,
        <div
          className="image-container"
        >
          <MemberPhotoItem
            description="Kendo Photo Details"
            filename="image-1543168184113.png"
            onUploadDelete={[Function]}
          />
          <MemberPhotoItem
            description="More Details"
            filename="image-0000000000.png"
            onUploadDelete={[Function]}
          />
          <MemberPhotoItem
            description="Extra Details"
            filename="image-3333333333.png"
            onUploadDelete={[Function]}
          />
        </div>,
      ],
      "className": "images-uploads content-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Member Photograph Upload",
          "className": "image-title",
        },
        "ref": null,
        "rendered": "Member Photograph Upload",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <label
                className="upload-file button-small"
                htmlFor="upload-file"
              >
                Get Photo
              </label>
              <input
                accept=".jpg,.jpeg,.png"
                id="upload-file"
                name="image"
                onChange={[Function]}
                type="file"
              />
            </div>,
            <div>
              <label
                className="upload-label"
                htmlFor="submit"
              >
                Upload Photo
              </label>
              <input
                className="button-small"
                name="submit"
                type="submit"
                value="Submit"
              />
            </div>,
            <div>
              <label
                className="upload-label"
                htmlFor="description"
              >
                Add Photo Description
              </label>
              <textarea
                className="upload-text input-box"
                col="2"
                name="description"
                onChange={[Function]}
                rows="2"
                type="text"
              />
            </div>,
          ],
          "className": "image-header",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="upload-file button-small"
                  htmlFor="upload-file"
                >
                  Get Photo
                </label>,
                <input
                  accept=".jpg,.jpeg,.png"
                  id="upload-file"
                  name="image"
                  onChange={[Function]}
                  type="file"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Get Photo",
                  "className": "upload-file button-small",
                  "htmlFor": "upload-file",
                },
                "ref": null,
                "rendered": "Get Photo",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "accept": ".jpg,.jpeg,.png",
                  "id": "upload-file",
                  "name": "image",
                  "onChange": [Function],
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="upload-label"
                  htmlFor="submit"
                >
                  Upload Photo
                </label>,
                <input
                  className="button-small"
                  name="submit"
                  type="submit"
                  value="Submit"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Upload Photo",
                  "className": "upload-label",
                  "htmlFor": "submit",
                },
                "ref": null,
                "rendered": "Upload Photo",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "button-small",
                  "name": "submit",
                  "type": "submit",
                  "value": "Submit",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="upload-label"
                  htmlFor="description"
                >
                  Add Photo Description
                </label>,
                <textarea
                  className="upload-text input-box"
                  col="2"
                  name="description"
                  onChange={[Function]}
                  rows="2"
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Photo Description",
                  "className": "upload-label",
                  "htmlFor": "description",
                },
                "ref": null,
                "rendered": "Add Photo Description",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "upload-text input-box",
                  "col": "2",
                  "name": "description",
                  "onChange": [Function],
                  "rows": "2",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <MemberPhotoItem
              description="Kendo Photo Details"
              filename="image-1543168184113.png"
              onUploadDelete={[Function]}
            />,
            <MemberPhotoItem
              description="More Details"
              filename="image-0000000000.png"
              onUploadDelete={[Function]}
            />,
            <MemberPhotoItem
              description="Extra Details"
              filename="image-3333333333.png"
              onUploadDelete={[Function]}
            />,
          ],
          "className": "image-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "5bfed7528032901512c0f933",
            "nodeType": "function",
            "props": Object {
              "description": "Kendo Photo Details",
              "filename": "image-1543168184113.png",
              "onUploadDelete": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "5bfed7528036661512c0f933",
            "nodeType": "function",
            "props": Object {
              "description": "More Details",
              "filename": "image-0000000000.png",
              "onUploadDelete": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "5bfed7528032901512c05rtd",
            "nodeType": "function",
            "props": Object {
              "description": "Extra Details",
              "filename": "image-3333333333.png",
              "onUploadDelete": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="image-title"
          >
            Member Photograph Upload
          </h1>,
          <form
            className="image-header"
            onSubmit={[Function]}
          >
            <div>
              <label
                className="upload-file button-small"
                htmlFor="upload-file"
              >
                Get Photo
              </label>
              <input
                accept=".jpg,.jpeg,.png"
                id="upload-file"
                name="image"
                onChange={[Function]}
                type="file"
              />
            </div>
            <div>
              <label
                className="upload-label"
                htmlFor="submit"
              >
                Upload Photo
              </label>
              <input
                className="button-small"
                name="submit"
                type="submit"
                value="Submit"
              />
            </div>
            <div>
              <label
                className="upload-label"
                htmlFor="description"
              >
                Add Photo Description
              </label>
              <textarea
                className="upload-text input-box"
                col="2"
                name="description"
                onChange={[Function]}
                rows="2"
                type="text"
              />
            </div>
          </form>,
          <div
            className="image-container"
          >
            <MemberPhotoItem
              description="Kendo Photo Details"
              filename="image-1543168184113.png"
              onUploadDelete={[Function]}
            />
            <MemberPhotoItem
              description="More Details"
              filename="image-0000000000.png"
              onUploadDelete={[Function]}
            />
            <MemberPhotoItem
              description="Extra Details"
              filename="image-3333333333.png"
              onUploadDelete={[Function]}
            />
          </div>,
        ],
        "className": "images-uploads content-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Member Photograph Upload",
            "className": "image-title",
          },
          "ref": null,
          "rendered": "Member Photograph Upload",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <label
                  className="upload-file button-small"
                  htmlFor="upload-file"
                >
                  Get Photo
                </label>
                <input
                  accept=".jpg,.jpeg,.png"
                  id="upload-file"
                  name="image"
                  onChange={[Function]}
                  type="file"
                />
              </div>,
              <div>
                <label
                  className="upload-label"
                  htmlFor="submit"
                >
                  Upload Photo
                </label>
                <input
                  className="button-small"
                  name="submit"
                  type="submit"
                  value="Submit"
                />
              </div>,
              <div>
                <label
                  className="upload-label"
                  htmlFor="description"
                >
                  Add Photo Description
                </label>
                <textarea
                  className="upload-text input-box"
                  col="2"
                  name="description"
                  onChange={[Function]}
                  rows="2"
                  type="text"
                />
              </div>,
            ],
            "className": "image-header",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="upload-file button-small"
                    htmlFor="upload-file"
                  >
                    Get Photo
                  </label>,
                  <input
                    accept=".jpg,.jpeg,.png"
                    id="upload-file"
                    name="image"
                    onChange={[Function]}
                    type="file"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Get Photo",
                    "className": "upload-file button-small",
                    "htmlFor": "upload-file",
                  },
                  "ref": null,
                  "rendered": "Get Photo",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "accept": ".jpg,.jpeg,.png",
                    "id": "upload-file",
                    "name": "image",
                    "onChange": [Function],
                    "type": "file",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="upload-label"
                    htmlFor="submit"
                  >
                    Upload Photo
                  </label>,
                  <input
                    className="button-small"
                    name="submit"
                    type="submit"
                    value="Submit"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Upload Photo",
                    "className": "upload-label",
                    "htmlFor": "submit",
                  },
                  "ref": null,
                  "rendered": "Upload Photo",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "button-small",
                    "name": "submit",
                    "type": "submit",
                    "value": "Submit",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="upload-label"
                    htmlFor="description"
                  >
                    Add Photo Description
                  </label>,
                  <textarea
                    className="upload-text input-box"
                    col="2"
                    name="description"
                    onChange={[Function]}
                    rows="2"
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Add Photo Description",
                    "className": "upload-label",
                    "htmlFor": "description",
                  },
                  "ref": null,
                  "rendered": "Add Photo Description",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "upload-text input-box",
                    "col": "2",
                    "name": "description",
                    "onChange": [Function],
                    "rows": "2",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <MemberPhotoItem
                description="Kendo Photo Details"
                filename="image-1543168184113.png"
                onUploadDelete={[Function]}
              />,
              <MemberPhotoItem
                description="More Details"
                filename="image-0000000000.png"
                onUploadDelete={[Function]}
              />,
              <MemberPhotoItem
                description="Extra Details"
                filename="image-3333333333.png"
                onUploadDelete={[Function]}
              />,
            ],
            "className": "image-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "5bfed7528032901512c0f933",
              "nodeType": "function",
              "props": Object {
                "description": "Kendo Photo Details",
                "filename": "image-1543168184113.png",
                "onUploadDelete": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "5bfed7528036661512c0f933",
              "nodeType": "function",
              "props": Object {
                "description": "More Details",
                "filename": "image-0000000000.png",
                "onUploadDelete": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "5bfed7528032901512c05rtd",
              "nodeType": "function",
              "props": Object {
                "description": "Extra Details",
                "filename": "image-3333333333.png",
                "onUploadDelete": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
