// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Members photo filter component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MembersPhotoFilter
    filters={[MockFunction]}
    setPhotoFilterTitle={[MockFunction]}
    setPhotoTextFilter={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="wrap-collapsible"
      >
        <input
          className="toggle-search"
          id="collapsible-search"
          type="checkbox"
        />
        <label
          className="lbl-toggle-search"
          htmlFor="collapsible-search"
        >
          Search
        </label>
        <div
          className="collapsible-content-search"
        >
          <div
            className="content-inner"
          >
            <form
              className="image-header"
            >
              <div
                className="image-search-container"
              >
                <input
                  className="filter-text input-box"
                  name="filterText"
                  onChange={[Function]}
                  placeholder="Search By Description"
                  type="text"
                />
                <input
                  className="filter-title input-box"
                  name="filterTitle"
                  onChange={[Function]}
                  placeholder="Search By Title"
                  type="text"
                />
              </div>
            </form>
          </div>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="toggle-search"
            id="collapsible-search"
            type="checkbox"
          />,
          <label
            className="lbl-toggle-search"
            htmlFor="collapsible-search"
          >
            Search
          </label>,
          <div
            className="collapsible-content-search"
          >
            <div
              className="content-inner"
            >
              <form
                className="image-header"
              >
                <div
                  className="image-search-container"
                >
                  <input
                    className="filter-text input-box"
                    name="filterText"
                    onChange={[Function]}
                    placeholder="Search By Description"
                    type="text"
                  />
                  <input
                    className="filter-title input-box"
                    name="filterTitle"
                    onChange={[Function]}
                    placeholder="Search By Title"
                    type="text"
                  />
                </div>
              </form>
            </div>
          </div>,
        ],
        "className": "wrap-collapsible",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "toggle-search",
            "id": "collapsible-search",
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Search",
            "className": "lbl-toggle-search",
            "htmlFor": "collapsible-search",
          },
          "ref": null,
          "rendered": "Search",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="content-inner"
            >
              <form
                className="image-header"
              >
                <div
                  className="image-search-container"
                >
                  <input
                    className="filter-text input-box"
                    name="filterText"
                    onChange={[Function]}
                    placeholder="Search By Description"
                    type="text"
                  />
                  <input
                    className="filter-title input-box"
                    name="filterTitle"
                    onChange={[Function]}
                    placeholder="Search By Title"
                    type="text"
                  />
                </div>
              </form>
            </div>,
            "className": "collapsible-content-search",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                className="image-header"
              >
                <div
                  className="image-search-container"
                >
                  <input
                    className="filter-text input-box"
                    name="filterText"
                    onChange={[Function]}
                    placeholder="Search By Description"
                    type="text"
                  />
                  <input
                    className="filter-title input-box"
                    name="filterTitle"
                    onChange={[Function]}
                    placeholder="Search By Title"
                    type="text"
                  />
                </div>
              </form>,
              "className": "content-inner",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="image-search-container"
                >
                  <input
                    className="filter-text input-box"
                    name="filterText"
                    onChange={[Function]}
                    placeholder="Search By Description"
                    type="text"
                  />
                  <input
                    className="filter-title input-box"
                    name="filterTitle"
                    onChange={[Function]}
                    placeholder="Search By Title"
                    type="text"
                  />
                </div>,
                "className": "image-header",
                "onSubmit": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="filter-text input-box"
                      name="filterText"
                      onChange={[Function]}
                      placeholder="Search By Description"
                      type="text"
                    />,
                    <input
                      className="filter-title input-box"
                      name="filterTitle"
                      onChange={[Function]}
                      placeholder="Search By Title"
                      type="text"
                    />,
                  ],
                  "className": "image-search-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "filter-text input-box",
                      "name": "filterText",
                      "onChange": [Function],
                      "placeholder": "Search By Description",
                      "type": "text",
                      "value": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "filter-title input-box",
                      "name": "filterTitle",
                      "onChange": [Function],
                      "placeholder": "Search By Title",
                      "type": "text",
                      "value": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              "type": "form",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="wrap-collapsible"
        >
          <input
            className="toggle-search"
            id="collapsible-search"
            type="checkbox"
          />
          <label
            className="lbl-toggle-search"
            htmlFor="collapsible-search"
          >
            Search
          </label>
          <div
            className="collapsible-content-search"
          >
            <div
              className="content-inner"
            >
              <form
                className="image-header"
              >
                <div
                  className="image-search-container"
                >
                  <input
                    className="filter-text input-box"
                    name="filterText"
                    onChange={[Function]}
                    placeholder="Search By Description"
                    type="text"
                  />
                  <input
                    className="filter-title input-box"
                    name="filterTitle"
                    onChange={[Function]}
                    placeholder="Search By Title"
                    type="text"
                  />
                </div>
              </form>
            </div>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="toggle-search"
              id="collapsible-search"
              type="checkbox"
            />,
            <label
              className="lbl-toggle-search"
              htmlFor="collapsible-search"
            >
              Search
            </label>,
            <div
              className="collapsible-content-search"
            >
              <div
                className="content-inner"
              >
                <form
                  className="image-header"
                >
                  <div
                    className="image-search-container"
                  >
                    <input
                      className="filter-text input-box"
                      name="filterText"
                      onChange={[Function]}
                      placeholder="Search By Description"
                      type="text"
                    />
                    <input
                      className="filter-title input-box"
                      name="filterTitle"
                      onChange={[Function]}
                      placeholder="Search By Title"
                      type="text"
                    />
                  </div>
                </form>
              </div>
            </div>,
          ],
          "className": "wrap-collapsible",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "toggle-search",
              "id": "collapsible-search",
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search",
              "className": "lbl-toggle-search",
              "htmlFor": "collapsible-search",
            },
            "ref": null,
            "rendered": "Search",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="content-inner"
              >
                <form
                  className="image-header"
                >
                  <div
                    className="image-search-container"
                  >
                    <input
                      className="filter-text input-box"
                      name="filterText"
                      onChange={[Function]}
                      placeholder="Search By Description"
                      type="text"
                    />
                    <input
                      className="filter-title input-box"
                      name="filterTitle"
                      onChange={[Function]}
                      placeholder="Search By Title"
                      type="text"
                    />
                  </div>
                </form>
              </div>,
              "className": "collapsible-content-search",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <form
                  className="image-header"
                >
                  <div
                    className="image-search-container"
                  >
                    <input
                      className="filter-text input-box"
                      name="filterText"
                      onChange={[Function]}
                      placeholder="Search By Description"
                      type="text"
                    />
                    <input
                      className="filter-title input-box"
                      name="filterTitle"
                      onChange={[Function]}
                      placeholder="Search By Title"
                      type="text"
                    />
                  </div>
                </form>,
                "className": "content-inner",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="image-search-container"
                  >
                    <input
                      className="filter-text input-box"
                      name="filterText"
                      onChange={[Function]}
                      placeholder="Search By Description"
                      type="text"
                    />
                    <input
                      className="filter-title input-box"
                      name="filterTitle"
                      onChange={[Function]}
                      placeholder="Search By Title"
                      type="text"
                    />
                  </div>,
                  "className": "image-header",
                  "onSubmit": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="filter-text input-box"
                        name="filterText"
                        onChange={[Function]}
                        placeholder="Search By Description"
                        type="text"
                      />,
                      <input
                        className="filter-title input-box"
                        name="filterTitle"
                        onChange={[Function]}
                        placeholder="Search By Title"
                        type="text"
                      />,
                    ],
                    "className": "image-search-container",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "filter-text input-box",
                        "name": "filterText",
                        "onChange": [Function],
                        "placeholder": "Search By Description",
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "filter-title input-box",
                        "name": "filterTitle",
                        "onChange": [Function],
                        "placeholder": "Search By Title",
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                "type": "form",
              },
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
